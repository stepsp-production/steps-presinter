// Cloudflare Pages Function
// Route: /vendor/livekit-client.umd.min.js
export async function onRequest({ request }) {
  const urlIn = new URL(request.url);
  const wantDiag = urlIn.searchParams.has('diag');
  const isHead = request.method === 'HEAD';

  const cdns = [
    'https://cdn.jsdelivr.net/npm/livekit-client@2.5.3/dist/livekit-client.umd.min.js',
    'https://cdn.jsdelivr.net/npm/livekit-client@2/dist/livekit-client.umd.min.js',
    'https://unpkg.com/livekit-client@2.5.3/dist/livekit-client.umd.min.js',
    'https://cdn.livekit.io/libs/client-sdk/2.5.3/livekit-client.umd.min.js',
  ];

  const attempts = [];
  let lastErr = null;

  for (const u of cdns) {
    try {
      const r = await fetch(u, { cf: { cacheEverything: true, cacheTtl: 86400 }, redirect: 'follow' });
      attempts.push({ url: u, ok: r.ok, status: r.status, ct: r.headers.get('content-type') || '' });

      if (r.ok) {
        const ct = (r.headers.get('content-type') || '').toLowerCase();
        const looksJs = ct.includes('javascript') || ct.includes('ecmascript') || u.endsWith('.js');
        if (!looksJs) {
          if (wantDiag) {
            const text = await r.text().catch(()=> '');
            return new Response(JSON.stringify({ ok:false, reason:'content-type-not-js', ct, snippet: text.slice(0, 200) }), {
              status: 502,
              headers: { 'Content-Type':'application/json; charset=utf-8', 'Access-Control-Allow-Origin':'*' }
            });
          }
          continue;
        }

        if (isHead) {
          return new Response(null, {
            status: 200,
            headers: {
              'Content-Type': 'application/javascript; charset=utf-8',
              'Cache-Control': 'public, max-age=86400, s-maxage=604800, immutable',
              'Access-Control-Allow-Origin': '*',
              'X-Source-URL': u,
            },
          });
        }

        return new Response(r.body, {
          status: 200,
          headers: {
            'Content-Type': 'application/javascript; charset=utf-8',
            'Cache-Control': 'public, max-age=86400, s-maxage=604800, immutable',
            'Access-Control-Allow-Origin': '*',
            'X-Source-URL': u,
          },
        });
      }
    } catch (e) {
      lastErr = e;
      attempts.push({ url: u, ok: false, error: e?.message || String(e) });
    }
  }

  if (wantDiag) {
    return new Response(JSON.stringify({ ok:false, attempts, lastErr: lastErr?.message || String(lastErr || '') }), {
      status: 502,
      headers: { 'Content-Type':'application/json; charset=utf-8', 'Access-Control-Allow-Origin':'*' },
    });
  }

  return new Response('CDN fetch failed', { status: 502 });
}
